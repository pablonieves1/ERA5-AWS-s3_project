GOOD: C:\OEE Dropbox\Pablo Nieves\Due Diligence - Raw Data\ERA5\OH - 38 to 42.5N -86.25 to -80W\1994-2025\ERA5_N38.0_to_42.5_W-86.25_to_-80.0_1995_01_01.nc
TEST: C:\Users\OEE2024_05\Documents\GitHub\ERA5-AWS-s3_project\ohio_ERA5_dataset testing\ERA5_OH_199501.nc

=== File model ===
good: NETCDF3_64BIT_OFFSET
test: NETCDF3_64BIT_OFFSET

=== Dimensions ===
Only in test: ['forecast_hour', 'forecast_initial_time']
Size differences:
  latitude: good=19, test=14
  longitude: good=26, test=18
  time: good=24, test=744

=== Coordinates (presence) ===
Only in test: ['forecast_hour', 'forecast_initial_time']

=== Coordinates (detail differences) ===
- latitude:
   dtype: ('float32', 'float64')
- longitude:
   dtype: ('float32', 'float64')
   attrs: {'units': ('degrees_east', None), 'long_name': ('longitude', None)}

=== Variables (presence) ===
Only in test: ['fg10', 'u10', 'v10']

=== Variables (detail differences) ===
- sp:
   dtype: ('float64', 'float32')
   attrs: {'standard_name': ('surface_air_pressure', None)}
- t2m:
   dtype: ('float64', 'float32')
- u100:
   dtype: ('float64', 'float32')
- v100:
   dtype: ('float64', 'float32')

=== Time axis ===
good encoding: {'units': 'hours since 1900-01-01 00:00:00.0', 'calendar': 'gregorian'}
test encoding: {'units': 'hours since 1900-01-01', 'calendar': 'standard'}
good first/last: 1995-01-01T00:00:00.000000000  1995-01-01T23:00:00.000000000
test first/last: 1995-01-01T00:00:00.000000000  1995-01-31T23:00:00.000000000
good step (h): 1.0
test step (h): 1.0

=== Suggestions ===
- Ensure coordinates are named exactly 'latitude' and 'longitude'.
- Ensure 'latitude' and 'longitude' are float32 (Single).
- Set coord attrs: latitude.units='degrees_north', longitude.units='degrees_east'; add axis=Y/X.
- Ensure time units are 'hours since 1900-01-01 00:00:00' and calendar='standard'.
- If the reader dislikes HDF5, write final files as NetCDF3 (xarray engine='scipy').
- Keep data variable dims ordered as (time, latitude, longitude).
- If the good file uses _FillValue/scale_factor/add_offset, mirror them if needed.